const {
  fetchAllTopics,
  fetchApiEndpoints,
  fetchArticleByID,
  fetchAllArticles,
  fetchCommentsByArticleId,
  checkIdExists,
  fetchPostedComment,
  verifyDetails,
} = require("../model/model.js");

exports.getTopics = (req, res, next) => {
  fetchAllTopics()
    .then((topics) => {
      res.status(200).send(topics);
    })
    .catch((err) => {
      next(err);
    });
};

exports.getApiEndpoints = (req, res, next) => {
  fetchApiEndpoints()
    .then((apiEndpoints) => {
      res.status(200).json(apiEndpoints);
    })
    .catch((err) => {
      next(err);
    });
};

exports.getArticleByID = (req, res, next) => {
  const { article_id } = req.params;
  fetchArticleByID(article_id)
    .then((result) => {
      res.status(200).send(result);
    })
    .catch((err) => {
      next(err);
    });
};

exports.getAllArticles = (req, res, next) => {
  fetchAllArticles()
    .then((articles) => {
      res.status(200).send(articles);
    })
    .catch((err) => {
      next(err);
    });
};

exports.getCommentsByArticleId = (req, res, next) => {
  const { article_id } = req.params;
  const idCheckQuery = checkIdExists(article_id, res, next);
  const fetchCommentsQuery = fetchCommentsByArticleId(article_id, next);
  Promise.all([idCheckQuery, fetchCommentsQuery])
    .then((response) => {
      if (response[0]) {
        res.status(response[0].status).send(response[0].msg);
      }
      res.status(200).send(response[1]);
    })
    .catch((err) => {
      next(err);
    });
};

exports.postCommentById = (req, res, next) => {
  const { article_id } = req.params;
  const { username, body } = req.body;
  return verifyDetails(article_id, username, res, next)
    .then(() => {
      return fetchPostedComment(article_id, username, body);
    })
    .then((comment) => {
      res.status(201).send(`${username} commented ${comment}`);
    })
    .catch((err) => {
      next(err);
    });
};
